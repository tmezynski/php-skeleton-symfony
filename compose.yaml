services:
  nginx:
    image: nginx:stable-alpine3.17
    hostname: skeleton_nginx
    restart: unless-stopped
    volumes:
      - ./build/nginx/dev.conf:/etc/nginx/nginx.conf
    ports:
      - "${HTTP_PORT:-8080}:80"
    depends_on:
      - php

  php:
    build:
      context: .
      target: development
    hostname: skeleton_php
    restart: unless-stopped
    user: ${USER_ID}:${GROUP_ID}
    volumes:
      - ./:/app
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - db
      - redis
      - kafka

  db:
    image: postgres:16-alpine
    hostname: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=skeleton
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - ./build/psql/init-db.sh:/docker-entrypoint-initdb.d/init-database.sh
    ports:
      - "${POSTGRES_PORT:-5432}:5432"

  kafka:
    image: bitnami/kafka:latest
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
